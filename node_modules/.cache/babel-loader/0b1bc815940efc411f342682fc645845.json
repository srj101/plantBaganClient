{"ast":null,"code":"var _jsxFileName = \"/Users/srjoy/Documents/NodeJSProjects/Plant_Bagan_App/varsity-app/src/components/pages/videos/singleVideo.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { useParams } from 'react-router-dom';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Spin } from 'antd';\nimport './videos.style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_VIDEO = gql`\nquery($getVideoId: String!) {\n  getVideo(id: $getVideoId) {\n    id\n    videoUrl\n    thumbnail\n    tag\n    title\n  }\n}\n`;\nconst GET_VIDEOS = gql`\nquery {\n  getVideos {\n    id\n    thumbnail\n    title\n    desc\n  }\n}\n`;\n\nfunction SingleVideo() {\n  _s();\n\n  var _data$getVideo, _data$getVideo2, _allVideos$data;\n\n  const {\n    videoId\n  } = useParams();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_VIDEO, {\n    variables: {\n      getVideoId: videoId\n    }\n  });\n  const allVideos = useQuery(GET_VIDEOS);\n  if (allVideos.loading) return /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 35\n  }, this);\n  if (loading) return /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 23\n  }, this);\n  if (allVideos.error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: allVideos.error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 33\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"single-video-page\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"the_video\",\n            children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n              src: data === null || data === void 0 ? void 0 : (_data$getVideo = data.getVideo) === null || _data$getVideo === void 0 ? void 0 : _data$getVideo.videoUrl,\n              frameborder: \"0\",\n              width: \"100%\",\n              height: \"480px\",\n              allow: \"autoplay; encrypted-media\",\n              allowfullscreen: true,\n              title: data === null || data === void 0 ? void 0 : (_data$getVideo2 = data.getVideo) === null || _data$getVideo2 === void 0 ? void 0 : _data$getVideo2.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: allVideos === null || allVideos === void 0 ? void 0 : (_allVideos$data = allVideos.data) === null || _allVideos$data === void 0 ? void 0 : _allVideos$data.getVideos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"single_video_item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"video_image\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: video.thumbnail,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"video_content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: video.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Quis id voluptatem est eos possimus vero.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SingleVideo, \"lSHe+4cVvTeJvgTAFADNiaGLqnU=\", false, function () {\n  return [useParams, useQuery, useQuery];\n});\n\n_c = SingleVideo;\nexport default SingleVideo;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleVideo\");","map":{"version":3,"sources":["/Users/srjoy/Documents/NodeJSProjects/Plant_Bagan_App/varsity-app/src/components/pages/videos/singleVideo.js"],"names":["React","gql","useQuery","useParams","Container","Row","Col","Spin","GET_VIDEO","GET_VIDEOS","SingleVideo","videoId","loading","error","data","variables","getVideoId","allVideos","message","getVideo","videoUrl","title","getVideos","map","video","thumbnail"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { gql,useQuery } from '@apollo/client'\nimport { useParams } from 'react-router-dom';\nimport { Container,Row,Col} from 'react-bootstrap';\nimport { Spin } from 'antd';\nimport './videos.style.css'\nconst GET_VIDEO = gql`\nquery($getVideoId: String!) {\n  getVideo(id: $getVideoId) {\n    id\n    videoUrl\n    thumbnail\n    tag\n    title\n  }\n}\n`;\n\nconst GET_VIDEOS = gql`\nquery {\n  getVideos {\n    id\n    thumbnail\n    title\n    desc\n  }\n}\n`;\n\nfunction SingleVideo() {\n    const {videoId} = useParams();\n    const { loading, error, data } = useQuery(GET_VIDEO,{\n        variables: {\n            getVideoId: videoId\n        }\n    });\n\n    const allVideos = useQuery(GET_VIDEOS);\n    if(allVideos.loading) return (<Spin />);\n    if(loading) return (<Spin />);\n    \n    if(error) return (<p>{error.message}</p>)\n    if(allVideos.error) return (<p>{allVideos.error.message}</p>)\n  return (\n    <div className='single-video-page'>\n       <Container>\n           <Row>\n                <Col>\n                    <div className=\"the_video\">\n                        <iframe src={data?.getVideo?.videoUrl}\n                                frameborder='0'\n                                width=\"100%\"\n                                height=\"480px\"\n                                allow='autoplay; encrypted-media'\n                                allowfullscreen\n                                title={data?.getVideo?.title}\n                        />\n                    </div>\n                </Col>\n           </Row>\n           <Row>\n                <Col>\n                    { allVideos?.data?.getVideos.map(video=> (\n                        <div className=\"single_video_item\">\n                            <div className=\"video_image\">\n                                <img src={video.thumbnail} alt=\"\" />\n                            </div>\n                            <div className=\"video_content\">\n                                <h3>{video.title}</h3>\n                                <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Quis id voluptatem est eos possimus vero.</p>\n                            </div>\n                        </div>\n                    )) }\n                    \n                </Col>\n           </Row>\n       </Container>\n    </div>\n  )\n}\n\nexport default SingleVideo"]},"metadata":{},"sourceType":"module"}