{"ast":null,"code":"var _jsxFileName = \"/Users/srjoy/Documents/NodeJSProjects/Plant_Bagan_App/varsity-app/src/components/pages/videos/singleVideo.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { useParams } from 'react-router-dom';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Spin } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_VIDEO = gql`\nquery($getVideoId: String!) {\n  getVideo(id: $getVideoId) {\n    id\n    videoUrl\n    thumbnail\n    tag\n    title\n  }\n}\n`;\n\nfunction SingleVideo() {\n  _s();\n\n  var _data$getVideo, _data$getVideo2;\n\n  const {\n    videoId\n  } = useParams();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_VIDEO, {\n    variables: {\n      getVideoId: videoId\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"single-video-page\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"the_video\",\n            children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n              src: data === null || data === void 0 ? void 0 : (_data$getVideo = data.getVideo) === null || _data$getVideo === void 0 ? void 0 : _data$getVideo.videoUrl,\n              frameborder: \"0\",\n              allow: \"autoplay; encrypted-media\",\n              allowfullscreen: true,\n              title: data === null || data === void 0 ? void 0 : (_data$getVideo2 = data.getVideo) === null || _data$getVideo2 === void 0 ? void 0 : _data$getVideo2.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SingleVideo, \"wExU4wpbBJsyvSZbq0vnKc/97KI=\", false, function () {\n  return [useParams, useQuery];\n});\n\n_c = SingleVideo;\nexport default SingleVideo;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleVideo\");","map":{"version":3,"sources":["/Users/srjoy/Documents/NodeJSProjects/Plant_Bagan_App/varsity-app/src/components/pages/videos/singleVideo.js"],"names":["React","gql","useQuery","useParams","Container","Row","Col","Spin","GET_VIDEO","SingleVideo","videoId","loading","error","data","variables","getVideoId","message","getVideo","videoUrl","title"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAaC,QAAb,QAA6B,gBAA7B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,EAAmBC,GAAnB,EAAuBC,GAAvB,QAAiC,iBAAjC;AACA,SAASC,IAAT,QAAqB,MAArB;;AACA,MAAMC,SAAS,GAAGP,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;;AAYA,SAASQ,WAAT,GAAuB;AAAA;;AAAA;;AACnB,QAAM;AAACC,IAAAA;AAAD,MAAYP,SAAS,EAA3B;AACA,QAAM;AAAEQ,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BX,QAAQ,CAACM,SAAD,EAAW;AAChDM,IAAAA,SAAS,EAAE;AACPC,MAAAA,UAAU,EAAEL;AADL;AADqC,GAAX,CAAzC;AAKA,MAAGC,OAAH,EAAY,oBAAQ,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,UAAR;AACZ,MAAGC,KAAH,EAAU,oBAAQ;AAAA,cAAIA,KAAK,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,UAAR;AACZ,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,2BACG,QAAC,SAAD;AAAA,6BACI,QAAC,GAAD;AAAA,+BACK,QAAC,GAAD;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACI;AAAQ,cAAA,GAAG,EAAEH,IAAF,aAAEA,IAAF,yCAAEA,IAAI,CAAEI,QAAR,mDAAE,eAAgBC,QAA7B;AACQ,cAAA,WAAW,EAAC,GADpB;AAEQ,cAAA,KAAK,EAAC,2BAFd;AAGQ,cAAA,eAAe,MAHvB;AAIQ,cAAA,KAAK,EAAEL,IAAF,aAAEA,IAAF,0CAAEA,IAAI,CAAEI,QAAR,oDAAE,gBAAgBE;AAJ/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA3BQV,W;UACaN,S,EACeD,Q;;;KAF5BO,W;AA6BT,eAAeA,WAAf","sourcesContent":["import React from 'react'\nimport { gql,useQuery } from '@apollo/client'\nimport { useParams } from 'react-router-dom';\nimport { Container,Row,Col} from 'react-bootstrap';\nimport { Spin } from 'antd';\nconst GET_VIDEO = gql`\nquery($getVideoId: String!) {\n  getVideo(id: $getVideoId) {\n    id\n    videoUrl\n    thumbnail\n    tag\n    title\n  }\n}\n`;\n\nfunction SingleVideo() {\n    const {videoId} = useParams();\n    const { loading, error, data } = useQuery(GET_VIDEO,{\n        variables: {\n            getVideoId: videoId\n        }\n    });\n    if(loading) return (<Spin />);\n    if(error) return (<p>{error.message}</p>)\n  return (\n    <div className='single-video-page'>\n       <Container>\n           <Row>\n                <Col>\n                    <div className=\"the_video\">\n                        <iframe src={data?.getVideo?.videoUrl}\n                                frameborder='0'\n                                allow='autoplay; encrypted-media'\n                                allowfullscreen\n                                title={data?.getVideo?.title}\n                        />\n                    </div>\n                </Col>\n           </Row>\n       </Container>\n    </div>\n  )\n}\n\nexport default SingleVideo"]},"metadata":{},"sourceType":"module"}