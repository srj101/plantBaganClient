{"ast":null,"code":"var _jsxFileName = \"/Users/srjoy/Documents/NodeJSProjects/Plant_Bagan_App/varsity-app/src/components/pages/videos/videos.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './videos.style.css';\nimport { gql, useQuery } from '@apollo/client';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_VIDEOS = gql`\nquery {\n  getVideos {\n    id\n    thumbnail\n    title\n  }\n}\n`;\n\nfunction Videos() {\n  _s();\n\n  var _data$getVideos;\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_VIDEOS);\n  if (loading) return \"loading...\";\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video_page\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: data === null || data === void 0 ? void 0 : (_data$getVideos = data.getVideos) === null || _data$getVideos === void 0 ? void 0 : _data$getVideos.map(video => /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"single-video\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"video-thumbnail\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: video.thumbnail,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"video-content\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: video.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this)\n        }, video.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"seeMore\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/plant/`,\n            children: \"See More Products\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Videos, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Videos;\nexport default Videos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"sources":["/Users/srjoy/Documents/NodeJSProjects/Plant_Bagan_App/varsity-app/src/components/pages/videos/videos.component.jsx"],"names":["React","gql","useQuery","Container","Row","Col","Link","GET_VIDEOS","Videos","loading","error","data","message","getVideos","map","video","thumbnail","title","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAASC,GAAT,EAAaC,QAAb,QAA6B,gBAA7B;AACA,SAASC,SAAT,EAAmBC,GAAnB,EAAuBC,GAAvB,QAAiC,iBAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,UAAU,GAAGN,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;;AAUA,SAASO,MAAT,GAAkB;AAAA;;AAAA;;AACd,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BT,QAAQ,CAACK,UAAD,CAAzC;AACA,MAAGE,OAAH,EAAY,OAAO,YAAP;AACZ,MAAGC,KAAH,EAAU,oBAAQ;AAAA,cAAIA,KAAK,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,UAAR;AACV,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI,QAAC,SAAD;AAAA,8BACI,QAAC,GAAD;AAAA,kBACKD,IADL,aACKA,IADL,0CACKA,IAAI,CAAEE,SADX,oDACK,gBAAiBC,GAAjB,CAAqBC,KAAK,iBACvB,QAAC,GAAD;AAAoB,UAAA,EAAE,EAAE,CAAxB;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,cAAhB;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,iBAAf;AAAA,qCACI;AAAK,gBAAA,GAAG,EAAEA,KAAK,CAACC,SAAhB;AAA2B,gBAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAK,cAAA,SAAS,EAAC,eAAf;AAAA,qCACI;AAAA,0BAAKD,KAAK,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,WAAUF,KAAK,CAACG,EAAhB;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAeI,QAAC,GAAD;AAAA,+BACA;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA,iCAA0B,QAAC,IAAD;AAAO,YAAA,EAAE,EAAG,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;GA3BQV,M;UAC4BN,Q;;;KAD5BM,M;AA4BT,eAAeA,MAAf","sourcesContent":["import React from 'react'\nimport './videos.style.css'\nimport { gql,useQuery } from '@apollo/client'\nimport { Container,Row,Col} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nconst GET_VIDEOS = gql`\nquery {\n  getVideos {\n    id\n    thumbnail\n    title\n  }\n}\n`;\n\nfunction Videos() {\n    const { loading, error, data } = useQuery(GET_VIDEOS);\n    if(loading) return \"loading...\";\n    if(error) return (<p>{error.message}</p>)\n    return (\n        <div className='video_page'>\n            <Container>\n                <Row>\n                    {data?.getVideos?.map(video => (\n                        <Col key={video.id} md={4}>\n                            <Link className=\"single-video\">\n                                <div className=\"video-thumbnail\">\n                                    <img src={video.thumbnail} alt=\"\" />\n                                </div>\n                                <div className=\"video-content\">\n                                    <h4>{video.title}</h4>\n                                </div>\n                            </Link>\n                        </Col>\n                    ))}\n                </Row>\n                <Row>\n                <span className=\"seeMore\"><Link  to={`/plant/`}>See More Products</Link></span> \n                </Row>\n            </Container>\n        </div>\n    )\n}\nexport default Videos"]},"metadata":{},"sourceType":"module"}